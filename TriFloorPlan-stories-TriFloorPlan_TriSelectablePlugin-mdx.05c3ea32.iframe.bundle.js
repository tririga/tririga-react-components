"use strict";(self.webpackChunk_tririga_tririga_react_components=self.webpackChunk_tririga_tririga_react_components||[]).push([[2511],{"./node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NF:function(){return withMDXComponents},Zo:function(){return MDXProvider},ah:function(){return useMDXComponents},pC:function(){return MDXContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents:allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components:components,children:children,disableParentContext:disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/TriFloorPlan/stories/TriFloorPlan_TriSelectablePlugin.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_storybook_addon_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li",h3:"h3",pre:"pre",code:"code"},(0,_storybook_addon_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:["\n","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.h_,{title:"React Components/TriFloorPlan/plugins/TriSelectablePlugin"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"triselectableplugin",children:"TriSelectablePlugin"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The TriSelectablePlugin adds the capability of selecting of one or more spaces on the floor plan."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"parameters",children:"Parameters"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"enabled: A flag to enable and disable this plugin. If this is omitted, then it will be true and the plugin will be enabled."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"multi: If true, enable the selection of multiple spaces. The default value is false."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"dragSelect: When true, drag box selection is enabled.  The mouse can be dragged to create a slection rectangle\nall selectable items fully enclosed in the selection rectange are selected.  While active, the pointer is\ncaptured and other mouse interactions are disabled."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"onSelectedChange: The handler that is called whenever the user selects or clears a space."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"If the multi property is false, then the handler function receives the selected space object, or null when the user clears a space."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"If the multi property is true, then the handler function receives an array of selected space objects."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"selectable: An array of objects. Each object represents a selectable space and it\nmust have an attribute with the same name as the value of TriSelectablePlugin.SPACE_ID.\nThis attribute must contain the ID of the selectable space."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"selectableClassName: A className to be applied to a selectable spaces. The default value is selectable."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"selected: An object if the multi property is false, or an array of objects if multi is true. Each object represents a selected space and it\nmust have an attribute with the same name as the value of TriSelectablePlugin.SPACE_ID.\nThis attribute must contain the ID of the selected space."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"selectedClassName: A className to be applied to all selected spaces. The default value is selected."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"zoomPadding: If this has a numeric value, it is added to each side of the selection bounding box before the new viewport is calculated."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"zoomToSelection: If true, whenever the selection is changed the view is zoomed and panned so that\nthe viewport fits the bounding box of the selection normalized for aspect ratio differences."}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"examples",children:"Examples"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"adding-a-single-selection-capability-to-a-floor-plan",children:"Adding a single selection capability to a floor plan"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:'import { TriFloorPlan, TriSelectablePlugin } from "@tririga/tririga-react-components";\n\nexport const SingleSelect = () => {\n  const [selected, setSelected] = useState({\n    [TriSelectablePlugin.SPACE_ID]: "127576751",\n  });\n  return (\n    <TriFloorPlan\n      floorPlanId={floorPlanId}\n      plugins={[\n        {\n          type: TriSelectablePlugin.type,\n          id: "singleSelectPlugin",\n          multi: false,\n          selectable: [\n            { [TriSelectablePlugin.SPACE_ID]: "127576725" },\n            { [TriSelectablePlugin.SPACE_ID]: "127576758" },\n            { [TriSelectablePlugin.SPACE_ID]: "127576777" },\n            { [TriSelectablePlugin.SPACE_ID]: "127576751" }\n          ],\n          selected,\n          onSelectedChange: (value) => setSelected(value),\n        },\n      ]}\n    />\n  );\n};\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"adding-a-multiple-selection-capability-to-a-floor-plan-with-custom-css-classes",children:"Adding a multiple selection capability to a floor plan with custom CSS classes"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:'import { TriFloorPlan, TriSelectablePlugin } from "@tririga/tririga-react-components";\n\nexport const MultiSelect = () => {\n  const [selected, setSelected] = useState(null);\n  return (\n    <TriFloorPlan\n      floorPlanId={floorPlanId}\n      plugins={[\n        {\n          type: TriSelectablePlugin.type,\n          id: "multiSelectPlugin",\n          multi: true,\n          selectable: [\n            { [TriSelectablePlugin.SPACE_ID]: "127576725" },\n            { [TriSelectablePlugin.SPACE_ID]: "127576758" },\n            { [TriSelectablePlugin.SPACE_ID]: "127576777" },\n            { [TriSelectablePlugin.SPACE_ID]: "127576751" }\n          ],\n          selected,\n          onSelectedChange: (value) => setSelected(value),\n          selectableClassName: "selectableRoom",\n          selectedClassName: "selectedRoom",\n        },\n      ]}\n    />\n  );\n};\n'})})]})}__webpack_exports__.default=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_storybook_addon_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);