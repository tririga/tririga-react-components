"use strict";(self.webpackChunk_tririga_tririga_react_components=self.webpackChunk_tririga_tririga_react_components||[]).push([[4754],{"./node_modules/@mdx-js/react/lib/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NF:function(){return withMDXComponents},Zo:function(){return MDXProvider},ah:function(){return useMDXComponents},pC:function(){return MDXContext}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents:allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components:components,children:children,disableParentContext:disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/TriFloorPlan/stories/TriFloorPlan_TriPinPlugin.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_storybook_addon_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li",h3:"h3",pre:"pre",code:"code"},(0,_storybook_addon_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:["\n","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.h_,{title:"React Components/TriFloorPlan/plugins/TriPinPlugin"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"tripinplugin",children:"TriPinPlugin"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The TriPinPlugin adds the capability of displaying pins on one or more spaces on a floor plan.\nOnly one pin can be displayed in one space. It is possible to display different pins for different spaces."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"parameters",children:"Parameters"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"className: A className to be applied to a pin."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:'enabled: A flag to enable and disable this plugin. If this is omitted, then it will be true and the plugin will be enabled. The default value is "pinned".'}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"icon: The icon to be displayed on the space. It can be a single SVG icon text that will be used for all pins, or\nit can be an object map, where the key is the pin type and the value is the SVG icon text."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"onSelectedChange: The handler that is called whenever the user taps a pin. The handler function receives the selected pin object."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["pins: An object or an array of objects. Each object must have two attributes:","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"An attribute with the same name as the value of TriPinPlugin.SPACE_ID: Contains the ID of the space to place a pin."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"An attribute with the same name as the value of TriPinPlugin.PIN_TYPE: Contains the key that identifies the icon to be used."}),"\n"]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"pinSize: The size of the pin in pixels. The default value is 32."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"preservePinSizeRatio: If true, the pin size will be scaled as the whole graphic is zoomed in or out.\nOtherwise, the pin size will be fixed and it will not be changed when the graphic is zoomed in or out."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"selected: An object that represents the selected pin. The object must have an attribute with the same name as the value of TriPinPlugin.SPACE_ID.\nThis attribute must contain the ID of the space where the pin will be displayed as selected.\nOnly one pin can be displayed as selected."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:"selectedClassName: A className to be applied to a selected pin. The default value is selected."}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"example",children:"Example"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"displaying-and-selecting-pins-on-the-floor-plan",children:"Displaying and selecting pins on the floor plan"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:'import { TriFloorPlan, TriPinPlugin } from "@tririga/tririga-react-components";\nimport { toString as iconToString } from "@carbon/icon-helpers";\nimport {\n  Location32,\n  UserAvatarFilled32,\n  ChargingStationFilled32,\n} from "@carbon/icons";\n\nexport const Pins = () => {\n  const [selected, setSelected] = useState(null);\n  return (\n    <TriFloorPlan\n      floorPlanId={floorPlanId}\n      plugins={[\n        {\n          type: TriPinPlugin.type,\n          id: "pinsPlugin",\n          pins: [\n            {\n              [TriPinPlugin.SPACE_ID]: "127576746",\n              [TriPinPlugin.PIN_TYPE]: "location",\n            },\n            {\n              [TriPinPlugin.SPACE_ID]: "127576744",\n              [TriPinPlugin.PIN_TYPE]: "user",\n            },\n            {\n              [TriPinPlugin.SPACE_ID]: "127576681",\n              [TriPinPlugin.PIN_TYPE]: "charging",\n            },\n          ],\n          icon: {\n            location: iconToString(Location32),\n            user: iconToString(UserAvatarFilled32),\n            charging: iconToString(ChargingStationFilled32),\n          },\n          preservePinSizeRatio: false,\n          pinSize: 32,\n          selected,\n          onSelectedChange: (value) => setSelected(value),\n        },\n      ]}\n    />\n  );\n};\n'})})]})}__webpack_exports__.default=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_storybook_addon_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);